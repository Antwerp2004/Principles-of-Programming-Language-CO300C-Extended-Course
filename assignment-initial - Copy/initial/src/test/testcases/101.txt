[[
            var(x,integer), var(y,integer), var(z,integer), var(w,integer),
            var(res1,integer), var(res2,integer), var(res3,integer), var(res4,integer),
            var(flag1,boolean), var(flag2,boolean), var(counter,integer), var(sum,integer),
            var(finalResult,integer)
        ],
        [
            func(max2, [par(a,integer), par(b,integer)], integer, [
                if(greater(a,b), assign(max2,a), assign(max2,b))
            ]),
            func(min2, [par(a,integer), par(b,integer)], integer, [
                if(less(a,b), assign(min2,a), assign(min2,b))
            ]),
            func(pow2, [par(n,integer)], integer, [
                if(le(n,0), assign(pow2,1), assign(pow2, times(2, call(pow2, [sub(n,1)]))))
            ]),
            func(sumToN, [par(n,integer)], integer, [
                if(le(n,1), assign(sumToN,n), assign(sumToN, add(n, call(sumToN,[sub(n,1)]))))
            ])
        ],
        [
            assign(x,5), assign(y,8), assign(z,3), assign(w,10),

            assign(res1, call(max2,[x,y])),          
            assign(res2, call(min2,[z,w])),          
            assign(res3, call(pow2,[3])),         
            assign(res4, call(sumToN,[4])),           

            assign(flag1,greater(res1,res2)),    
            assign(flag2,less(res3,res4)),          

            assign(counter,0), assign(sum,0),      
            loop(5, block([], [                      
                assign(sum, add(sum, counter)),       
                assign(counter, add(counter, 1))     
            ])),

            if(flag1,
                if(flag2,
                    assign(finalResult, add(sum, res4)),     
                    assign(finalResult, res4)),
                assign(finalResult, res2)                    
            ),

            call(writeIntLn,[finalResult])
        ]].